{\rtf1\ansi\ansicpg1252\cocoartf2639
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\froman\fcharset0 Times-Roman;\f1\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red89\green138\blue67;\red183\green111\blue179;
\red85\green85\blue85;\red55\green96\blue122;\red70\green137\blue204;\red117\green59\blue39;\red61\green172\blue144;
\red119\green120\blue84;\red90\green110\blue80;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\cssrgb\c41569\c60000\c33333;\cssrgb\c77255\c52549\c75294;
\cssrgb\c40784\c40784\c40784;\cssrgb\c27059\c45490\c55294;\cssrgb\c33725\c61176\c83922;\cssrgb\c53725\c30196\c20392;\cssrgb\c28235\c72157\c63137;
\cssrgb\c54118\c54118\c40392;\cssrgb\c42745\c50196\c38824;}
\margl1440\margr1440\vieww28600\viewh17440\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs29\fsmilli14667 \cf0 \expnd0\expndtw0\kerning0
\'a0\
\pard\pardeftab720\partightenfactor0

\f1\fs24 \cf3 # Import required libraries\
\pard\pardeftab720\partightenfactor0
\cf4 import\cf5  pandas \cf4 as\cf5  pd\cf0 \
\cf4 import\cf5  dash\cf0 \
\cf4 import\cf5  dash_html_components \cf4 as\cf5  html\cf0 \
\cf4 import\cf5  dash_core_components \cf4 as\cf5  dcc\cf0 \
\cf4 from\cf5  dash.dependencies \cf4 import\cf5  Input, Output, State\cf0 \
\cf4 import\cf5  plotly.graph_objects \cf4 as\cf5  go\cf0 \
\cf4 import\cf5  plotly.express \cf4 as\cf5  px\cf0 \
\cf4 from\cf5  dash \cf4 import\cf5  no_update\cf0 \
\pard\pardeftab720\partightenfactor0

\f0\fs29\fsmilli14667 \cf0 \'a0\
\pard\pardeftab720\partightenfactor0

\f1\fs24 \cf3 # Create a dash application\
\pard\pardeftab720\partightenfactor0
\cf5 app = dash.Dash(\cf6 __name__\cf5 )\cf0 \
\pard\pardeftab720\partightenfactor0
\cf3 # REVIEW1: Clear the layout and do not display exception till callback gets executed\
\pard\pardeftab720\partightenfactor0
\cf5 app.config.suppress_callback_exceptions = \cf7 True\cf0 \
\pard\pardeftab720\partightenfactor0
\cf3 # Read the airline data into pandas dataframe\
\pard\pardeftab720\partightenfactor0
\cf5 airline_data =\'a0 pd.read_csv(\cf8 'https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMDeveloperSkillsNetwork-DV0101EN-SkillsNetwork/Data\cf7 %20F\cf8 iles/airline_data.csv'\cf5 ,\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf6 encoding\cf5  = \cf8 "ISO-8859-1"\cf5 ,\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf6 dtype\cf5 =\{\cf8 'Div1Airport'\cf5 : \cf9 str\cf5 , \cf8 'Div1TailNum'\cf5 : \cf9 str\cf5 ,\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf8 'Div2Airport'\cf5 : \cf9 str\cf5 , \cf8 'Div2TailNum'\cf5 : \cf9 str\cf5 \})\cf0 \
\pard\pardeftab720\partightenfactor0

\f0\fs29\fsmilli14667 \cf0 \'a0\
\pard\pardeftab720\partightenfactor0

\f1\fs24 \cf3 # List of years\
\pard\pardeftab720\partightenfactor0
\cf5 year_list = [i \cf4 for\cf5  i \cf4 in \cf10 range\cf5 (\cf11 2005\cf5 , \cf11 2021\cf5 , \cf11 1\cf5 )]\cf0 \
\pard\pardeftab720\partightenfactor0
\cf8 """Compute graph data for creating yearly airline performance report\
Function that takes airline data as input and create 5 dataframes based on the grouping condition to be used for plottling charts and grphs.\
Argument:\
\'a0\'a0\'a0\'a0\
\'a0\'a0\'a0 df: Filtered dataframe\
\'a0\'a0\'a0\
Returns:\
\'a0\'a0 Dataframes to create graph.\
"""\
\pard\pardeftab720\partightenfactor0
\cf7 def \cf10 compute_data_choice_1\cf5 (\cf6 df\cf5 ):\cf0 \
\pard\pardeftab720\partightenfactor0
\cf5 \'a0\'a0\'a0 \cf3 # Cancellation Category Count\cf0 \
\cf5 \'a0\'a0\'a0 bar_data = df.groupby([\cf8 'Month'\cf5 ,\cf8 'CancellationCode'\cf5 ])[\cf8 'Flights'\cf5 ].sum().reset_index()\cf0 \
\cf5 \'a0\'a0\'a0 \cf3 # Average flight time by reporting airline\cf0 \
\cf5 \'a0\'a0\'a0 line_data = df.groupby([\cf8 'Month'\cf5 ,\cf8 'Reporting_Airline'\cf5 ])[\cf8 'AirTime'\cf5 ].mean().reset_index()\cf0 \
\cf5 \'a0\'a0\'a0 \cf3 # Diverted Airport Landings\cf0 \
\cf5 \'a0\'a0\'a0 div_data = df[df[\cf8 'DivAirportLandings'\cf5 ] != \cf11 0.0\cf5 ]\cf0 \
\cf5 \'a0\'a0\'a0 \cf3 # Source state count\cf0 \
\cf5 \'a0\'a0\'a0 map_data = df.groupby([\cf8 'OriginState'\cf5 ])[\cf8 'Flights'\cf5 ].sum().reset_index()\cf0 \
\cf5 \'a0\'a0\'a0 \cf3 # Destination state count\cf0 \
\cf5 \'a0\'a0\'a0 tree_data = df.groupby([\cf8 'DestState'\cf5 , \cf8 'Reporting_Airline'\cf5 ])[\cf8 'Flights'\cf5 ].sum().reset_index()\cf0 \
\cf5 \'a0\'a0\'a0 \cf4 return\cf5  bar_data, line_data, div_data, map_data, tree_data\cf0 \
\pard\pardeftab720\partightenfactor0

\f0\fs29\fsmilli14667 \cf0 \'a0\
\pard\pardeftab720\partightenfactor0

\f1\fs24 \cf8 """Compute graph data for creating yearly airline delay report\
This function takes in airline data and selected year as an input and performs computation for creating charts and plots.\
Arguments:\
\'a0\'a0\'a0 df: Input airline data.\
\'a0\'a0\'a0\
Returns:\
\'a0\'a0\'a0 Computed average dataframes for carrier delay, weather delay, NAS delay, security delay, and late aircraft delay.\
"""\
\pard\pardeftab720\partightenfactor0
\cf7 def \cf10 compute_data_choice_2\cf5 (\cf6 df\cf5 ):\cf0 \
\pard\pardeftab720\partightenfactor0
\cf5 \'a0\'a0\'a0 \cf3 # Compute delay averages\cf0 \
\cf5 \'a0\'a0\'a0 avg_car = df.groupby([\cf8 'Month'\cf5 ,\cf8 'Reporting_Airline'\cf5 ])[\cf8 'CarrierDelay'\cf5 ].mean().reset_index()\cf0 \
\cf5 \'a0\'a0\'a0 avg_weather = df.groupby([\cf8 'Month'\cf5 ,\cf8 'Reporting_Airline'\cf5 ])[\cf8 'WeatherDelay'\cf5 ].mean().reset_index()\cf0 \
\cf5 \'a0\'a0\'a0 avg_NAS = df.groupby([\cf8 'Month'\cf5 ,\cf8 'Reporting_Airline'\cf5 ])[\cf8 'NASDelay'\cf5 ].mean().reset_index()\cf0 \
\cf5 \'a0\'a0\'a0 avg_sec = df.groupby([\cf8 'Month'\cf5 ,\cf8 'Reporting_Airline'\cf5 ])[\cf8 'SecurityDelay'\cf5 ].mean().reset_index()\cf0 \
\cf5 \'a0\'a0\'a0 avg_late = df.groupby([\cf8 'Month'\cf5 ,\cf8 'Reporting_Airline'\cf5 ])[\cf8 'LateAircraftDelay'\cf5 ].mean().reset_index()\cf0 \
\cf5 \'a0\'a0\'a0 \cf4 return\cf5  avg_car, avg_weather, avg_NAS, avg_sec, avg_late\cf0 \
\pard\pardeftab720\partightenfactor0

\f0\fs29\fsmilli14667 \cf0 \'a0\
\pard\pardeftab720\partightenfactor0

\f1\fs24 \cf3 # Application layout\
\pard\pardeftab720\partightenfactor0
\cf5 app.layout = html.Div(\cf6 children\cf5 =[\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf3 # TASK1: Add title to the dashboard\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf3 # Enter your code below. Make sure you have correct formatting.\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 html.H1(\cf8 'US Domestic Airline Flights Performance'\cf5 ,\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf6 style\cf5 =\{\cf8 'textAlign'\cf5 : \cf8 'center'\cf5 , \cf8 'color'\cf5 : \cf8 '#503D36'\cf5 ,\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf8 'font-size'\cf5 : \cf11 24\cf5 \}),\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf3 # REVIEW2: Dropdown creation\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf3 # Create an outer division\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 html.Div([\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf3 # Add an division\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 html.Div([\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf3 # Create an division for adding dropdown helper text for report type\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 html.Div(\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 [\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 html.H2(\cf8 'Report Type:'\cf5 , \cf6 style\cf5 =\{\cf8 'margin-right'\cf5 : \cf8 '2em'\cf5 \}),\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 ]\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 ),\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf3 # TASK2: Add a dropdown\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf3 # Enter your code below. Make sure you have correct formatting.\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 dcc.Dropdown(\cf6 id\cf5 =\cf8 'input-type'\cf5 ,\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf6 options\cf5 =[\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \{\cf8 'label'\cf5 : \cf8 'Yearly Airline Performance Report'\cf5 , \cf8 'value'\cf5 : \cf8 'OPT1'\cf5 \},\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \{\cf8 'label'\cf5 : \cf8 'Yearly Airline Delay Report'\cf5 , \cf8 'value'\cf5 : \cf8 'OPT2'\cf5 \}\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 ],\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf6 placeholder\cf5 =\cf8 'Select a report type'\cf5 ,\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf6 style\cf5 =\{\cf8 'width'\cf5 :\cf8 '80%'\cf5 , \cf8 'padding'\cf5 :\cf8 '3px'\cf5 , \cf8 'font-size'\cf5 : \cf8 '20px'\cf5 , \cf8 'text-align-last'\cf5  : \cf8 'center'\cf5 \})\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf3 # Place them next to each other using the division style\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 ], \cf6 style\cf5 =\{\cf8 'display'\cf5 :\cf8 'flex'\cf5 \}),\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf3 # Add next division\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 html.Div([\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf3 # Create an division for adding dropdown helper text for choosing year\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 html.Div(\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 [\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 html.H2(\cf8 'Choose Year:'\cf5 , \cf6 style\cf5 =\{\cf8 'margin-right'\cf5 : \cf8 '2em'\cf5 \})\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 ]\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 ),\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 dcc.Dropdown(\cf6 id\cf5 =\cf8 'input-year'\cf5 ,\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf3 # Update dropdown values using list comphrehension\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf6 options\cf5 =[\{\cf8 'label'\cf5 : i, \cf8 'value'\cf5 : i\} \cf4 for\cf5  i \cf4 in\cf5  year_list],\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf6 placeholder\cf5 =\cf8 "Select a year"\cf5 ,\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf6 style\cf5 =\{\cf8 'width'\cf5 :\cf8 '80%'\cf5 , \cf8 'padding'\cf5 :\cf8 '3px'\cf5 , \cf8 'font-size'\cf5 : \cf8 '20px'\cf5 , \cf8 'text-align-last'\cf5  : \cf8 'center'\cf5 \}),\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf3 # Place them next to each other using the division style\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 ], \cf6 style\cf5 =\{\cf8 'display'\cf5 : \cf8 'flex'\cf5 \}),\'a0\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 ]),\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf3 # Add Computed graphs\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf3 # REVIEW3: Observe how we add an empty division and providing an id that will be updated during callback\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 html.Div([ ], \cf6 id\cf5 =\cf8 'plot1'\cf5 ),\cf0 \
\cf5 \'a0\'a0\'a0\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 html.Div([\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 html.Div([ ], \cf6 id\cf5 =\cf8 'plot2'\cf5 ),\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 html.Div([ ], \cf6 id\cf5 =\cf8 'plot3'\cf5 )\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 ], \cf6 style\cf5 =\{\cf8 'display'\cf5 : \cf8 'flex'\cf5 \}),\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf3 # TASK3: Add a division with two empty divisions inside. See above disvision for example.\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf3 # Enter your code below. Make sure you have correct formatting.\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 html.Div([\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 html.Div([ ], \cf6 id\cf5 =\cf8 'plot4'\cf5 ),\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 html.Div([ ], \cf6 id\cf5 =\cf8 'plot5'\cf5 )\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 ], \cf6 style\cf5 =\{\cf8 'display'\cf5 : \cf8 'flex'\cf5 \}),\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 ])\
\pard\pardeftab720\partightenfactor0
\cf3 # Callback function definition\
# TASK4: Add 5 ouput components\
# Enter your code below. Make sure you have correct formatting.\
\pard\pardeftab720\partightenfactor0
\cf10 @app.callback\cf5 ( [[Output(\cf6 component_id\cf5 =\cf8 'plot1'\cf5 , \cf6 component_property\cf5 =\cf8 'children'\cf5 ),\cf0 \
\pard\pardeftab720\partightenfactor0
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 Output(\cf6 component_id\cf5 =\cf8 'plot2'\cf5 , \cf6 component_property\cf5 =\cf8 'children'\cf5 ),\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 Output(\cf6 component_id\cf5 =\cf8 'plot3'\cf5 , \cf6 component_property\cf5 =\cf8 'children'\cf5 ),\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 Output(\cf6 component_id\cf5 =\cf8 'plot4'\cf5 , \cf6 component_property\cf5 =\cf8 'children'\cf5 ),\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 Output(\cf6 component_id\cf5 =\cf8 'plot5'\cf5 , \cf6 component_property\cf5 =\cf8 'children'\cf5 )]],\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 [Input(\cf6 component_id\cf5 =\cf8 'input-type'\cf5 , \cf6 component_property\cf5 =\cf8 'value'\cf5 ),\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 Input(\cf6 component_id\cf5 =\cf8 'input-year'\cf5 , \cf6 component_property\cf5 =\cf8 'value'\cf5 )],\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf3 # REVIEW4: Holding output state till user enters all the form information. In this case, it will be chart type and year\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 [State(\cf8 "plot1"\cf5 , \cf8 'children'\cf5 ), State(\cf8 "plot2"\cf5 , \cf8 "children"\cf5 ),\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 State(\cf8 "plot3"\cf5 , \cf8 "children"\cf5 ), State(\cf8 "plot4"\cf5 , \cf8 "children"\cf5 ),\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 State(\cf8 "plot5"\cf5 , \cf8 "children"\cf5 )\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 ])\
\pard\pardeftab720\partightenfactor0
\cf3 # Add computation to callback function and return graph\
\pard\pardeftab720\partightenfactor0
\cf7 def \cf10 get_graph\cf5 (\cf6 chart\cf5 , \cf6 year\cf5 , \cf6 children1\cf5 , \cf6 children2\cf5 , \cf6 c3\cf5 , \cf6 c4\cf5 , \cf6 c5\cf5 ):\cf0 \
\pard\pardeftab720\partightenfactor0
\cf5 \'a0\'a0\'a0\'a0\'a0\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf3 # Select data\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 df =\'a0 airline_data[airline_data[\cf8 'Year'\cf5 ]==\cf9 int\cf5 (year)]\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf4 if\cf5  chart == \cf8 'OPT1'\cf5 :\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf3 # Compute required information for creating graph from the data\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 bar_data, line_data, div_data, map_data, tree_data = compute_data_choice_1(df)\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf3 # Number of flights under different cancellation categories\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 bar_fig = px.bar(bar_data, \cf6 x\cf5 =\cf8 'Month'\cf5 , \cf6 y\cf5 =\cf8 'Flights'\cf5 , \cf6 color\cf5 =\cf8 'CancellationCode'\cf5 , \cf6 title\cf5 =\cf8 'Monthly Flight Cancellation'\cf5 )\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf3 # TASK5: Average flight time by reporting airline\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf3 # Enter your code below. Make sure you have correct formatting.\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 line_fig = px.line(line_data, \cf6 x\cf5 =\cf8 'month.'\cf5 , \cf6 y\cf5 =\cf8 'AirTime'\cf5 , \cf6 color\cf5 =\cf8 'Reporting_Airline'\cf5 , \cf6 title\cf5 =\cf8 'Average monthly flight time (minutes) by ariline'\cf5 )\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf3 # Percentage of diverted airport landings per reporting airline\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 pie_fig = px.pie(div_data, \cf6 values\cf5 =\cf8 'Flights'\cf5 , \cf6 names\cf5 =\cf8 'Reporting_Airline'\cf5 , \cf6 title\cf5 =\cf8 '\cf7 % o\cf8 f flights by reporting airline'\cf5 )\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf3 # REVIEW5: Number of flights flying from each state using choropleth\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 map_fig = px.choropleth(map_data,\'a0 \cf3 # Input data\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf6 locations\cf5 =\cf8 'OriginState'\cf5 ,\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf6 color\cf5 =\cf8 'Flights'\cf5 ,\'a0\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf6 hover_data\cf5 =[\cf8 'OriginState'\cf5 , \cf8 'Flights'\cf5 ],\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf6 locationmode\cf5  = \cf8 'USA-states'\cf5 , \cf3 # Set to plot as US States\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf6 color_continuous_scale\cf5 =\cf8 'GnBu'\cf5 ,\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf6 range_color\cf5 =[\cf11 0\cf5 , map_data[\cf8 'Flights'\cf5 ].max()])\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 map_fig.update_layout(\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf6 title_text\cf5  = \cf8 'Number of flights from origin state'\cf5 ,\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf6 geo_scope\cf5 =\cf8 'usa'\cf5 ) \cf3 # Plot only the USA instead of globe\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf3 # TASK6: Number of flights flying to each state from each reporting airline\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf3 # Enter your code below. Make sure you have correct formatting.\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 tree_fig = px.treemap(tree_data, \cf6 path\cf5 =[\cf8 'DestState'\cf5 , \cf8 'Reporting_Airline'\cf5 ],\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf6 values\cf5 =\cf8 'Flights'\cf5 ,\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf6 color\cf5 =\cf8 'Flights'\cf5 ,\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf6 color_continuous_scale\cf5 =\cf8 'RdBu'\cf5 ,\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf6 title\cf5 =\cf8 'Flight count by airline to destination state'\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 )\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf3 # REVIEW6: Return dcc.Graph component to the empty division\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf4 return\cf5  [dcc.Graph(\cf6 figure\cf5 =tree_fig),\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 dcc.Graph(\cf6 figure\cf5 =pie_fig),\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 dcc.Graph(\cf6 figure\cf5 =map_fig),\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 dcc.Graph(\cf6 figure\cf5 =bar_fig),\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 dcc.Graph(\cf6 figure\cf5 =line_fig)\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 ]\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf4 else\cf5 :\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf3 # REVIEW7: This covers chart type 2 and we have completed this exercise under Flight Delay Time Statistics Dashboard section\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf3 # Compute required information for creating graph from the data\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 avg_car, avg_weather, avg_NAS, avg_sec, avg_late = compute_data_choice_2(df)\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf3 # Create graph\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 carrier_fig = px.line(avg_car, \cf6 x\cf5 =\cf8 'Month'\cf5 , \cf6 y\cf5 =\cf8 'CarrierDelay'\cf5 , \cf6 color\cf5 =\cf8 'Reporting_Airline'\cf5 , \cf6 title\cf5 =\cf8 'Average carrrier delay time (minutes) by airline'\cf5 )\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 weather_fig = px.line(avg_weather, \cf6 x\cf5 =\cf8 'Month'\cf5 , \cf6 y\cf5 =\cf8 'WeatherDelay'\cf5 , \cf6 color\cf5 =\cf8 'Reporting_Airline'\cf5 , \cf6 title\cf5 =\cf8 'Average weather delay time (minutes) by airline'\cf5 )\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 nas_fig = px.line(avg_NAS, \cf6 x\cf5 =\cf8 'Month'\cf5 , \cf6 y\cf5 =\cf8 'NASDelay'\cf5 , \cf6 color\cf5 =\cf8 'Reporting_Airline'\cf5 , \cf6 title\cf5 =\cf8 'Average NAS delay time (minutes) by airline'\cf5 )\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 sec_fig = px.line(avg_sec, \cf6 x\cf5 =\cf8 'Month'\cf5 , \cf6 y\cf5 =\cf8 'SecurityDelay'\cf5 , \cf6 color\cf5 =\cf8 'Reporting_Airline'\cf5 , \cf6 title\cf5 =\cf8 'Average security delay time (minutes) by airline'\cf5 )\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 late_fig = px.line(avg_late, \cf6 x\cf5 =\cf8 'Month'\cf5 , \cf6 y\cf5 =\cf8 'LateAircraftDelay'\cf5 , \cf6 color\cf5 =\cf8 'Reporting_Airline'\cf5 , \cf6 title\cf5 =\cf8 'Average late aircraft delay time (minutes) by airline'\cf5 )\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf4 return\cf5 [dcc.Graph(\cf6 figure\cf5 =carrier_fig),\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 dcc.Graph(\cf6 figure\cf5 =weather_fig),\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 dcc.Graph(\cf6 figure\cf5 =nas_fig),\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 dcc.Graph(\cf6 figure\cf5 =sec_fig),\cf0 \
\cf5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 dcc.Graph(\cf6 figure\cf5 =late_fig)]\cf0 \
\pard\pardeftab720\partightenfactor0

\f0\fs29\fsmilli14667 \cf0 \'a0\
\pard\pardeftab720\partightenfactor0

\f1\fs24 \cf3 # Run the app\
\pard\pardeftab720\partightenfactor0
\cf4 if \cf6 __name__\cf5  == \cf8 '__main__'\cf5 :\cf0 \
\cf5 \'a0\'a0\'a0 app.run_server()\
}